version: '3.8'

services:
  transcribe_service:
    build: ./services/transcribe_service/Dockerfile
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "8000:8000"
    volumes:
      - ./services/transcribe_service:/app
    environment:
      - SERVICE_ENV=development
    networks:
      - app_network
    restart: on-failure
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  thumbnail_creation_service:
    build: ./services/thumbnail_creation_service/Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./services/thumbnail_creation_service:/app
    environment:
      - SERVICE_ENV=development
    networks:
      - app_network
    restart: on-failure
    env_file:
      - ./env_variables/dev/.env
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]



#
  #metadata_service:
  #  build: ./services/metadata_service
  #  ports:
  #    - "8003:8000"
  #  volumes:
  #    - metadata_storage:/app/data  # Assuming this service needs to persist data
  #  environment:
  #    - SERVICE_ENV=development
  #  networks:
  #    - app_network
  #  restart: on-failure
#
  #upload_service:
  #  build: ./services/upload_service
  #  ports:
  #    - "8004:8000"
  #  volumes:
  #    - ./services/upload_service:/app
  #  depends_on:
  #    - metadata_service
  #  environment:
  #    - SERVICE_ENV=development
  #  networks:
  #    - app_network
  #  restart: on-failure

networks:
  app_network:
    driver: bridge

volumes:
  metadata_storage:  # Define the volume if your service requires data persistence
